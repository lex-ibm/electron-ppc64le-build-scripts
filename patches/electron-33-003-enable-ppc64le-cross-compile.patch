diff --git a/build/config/compiler/BUILD.gn b/build/config/compiler/BUILD.gn
index 1af3d0e179f1c..c682c04bb0589 100644
--- a/build/config/compiler/BUILD.gn
+++ b/build/config/compiler/BUILD.gn
@@ -1476,6 +1476,10 @@ config("compiler_cpu_abi") {
       } else {
         cflags += [ "-m64" ]
         ldflags += [ "-m64" ]
+        if (is_clang) {
+          cflags += [ "--target=powerpc64le-linux-gnu" ]
+          ldflags += [ "--target=powerpc64le-linux-gnu" ]
+        } 
       }
     } else if (current_cpu == "riscv64") {
       if (is_clang && !is_android) {
@@ -1976,10 +1980,10 @@ config("default_warnings") {
         ]
 
         # TODO(crbug.com/344680447): Fix and re-enable.
-        cflags_cc += [ "-Wno-missing-template-arg-list-after-template-kw" ]
+        # cflags_cc += [ "-Wno-missing-template-arg-list-after-template-kw" ]
 
         # TODO(crbug.com/356172342): Fix and re-enable.
-        cflags_cc += [ "-Wno-dangling-assignment-gsl" ]
+        # cflags_cc += [ "-Wno-dangling-assignment-gsl" ]
       }
     }
 
diff --git a/build/config/sysroot.gni b/build/config/sysroot.gni
index 47fe4cbc840dd..3825cd75f17f0 100644
--- a/build/config/sysroot.gni
+++ b/build/config/sysroot.gni
@@ -49,6 +49,8 @@ if (sysroot == "") {
       sysroot = "$target_sysroot_dir/debian_bullseye_armhf-sysroot"
     } else if (current_cpu == "arm64") {
       sysroot = "$target_sysroot_dir/debian_bullseye_arm64-sysroot"
+    } else if (current_cpu == "ppc64") {
+      sysroot = "$target_sysroot_dir/debian_bullseye_ppc64el-sysroot"
     } else {
       assert(false, "No linux sysroot for cpu: $target_cpu")
     }
diff --git a/build/toolchain/linux/BUILD.gn b/build/toolchain/linux/BUILD.gn
index 00e866896f9a7..25366ef0da364 100644
--- a/build/toolchain/linux/BUILD.gn
+++ b/build/toolchain/linux/BUILD.gn
@@ -30,6 +30,14 @@ clang_toolchain("clang_arm64") {
   }
 }
 
+clang_toolchain("clang_arm64_v8_ppc64") {
+  toolchain_args = {
+    current_cpu = "arm64"
+    current_os = "linux"
+    v8_current_cpu = "ppc64"
+  }
+}
+
 gcc_toolchain("arm64") {
   toolprefix = "aarch64-linux-gnu-"
 
@@ -179,6 +187,13 @@ clang_v8_toolchain("clang_x64_v8_loong64") {
   }
 }
 
+clang_v8_toolchain("clang_x64_v8_ppc64") {
+  toolchain_args = {
+    current_cpu = "x64"
+    v8_current_cpu = "ppc64"
+  }
+}
+
 # In a LaCrOS build, this toolchain is intended to be used as an alternate
 # toolchain to build Ash-Chrome in a subdirectory.
 # This is a test-only toolchain.
diff --git a/chrome/installer/linux/BUILD.gn b/chrome/installer/linux/BUILD.gn
index ce94b6fb4aa55..2268c5820c85c 100644
--- a/chrome/installer/linux/BUILD.gn
+++ b/chrome/installer/linux/BUILD.gn
@@ -455,6 +455,8 @@ template("linux_package") {
       deb_arch = "loong64"
     } else if (current_cpu == "riscv64") {
       deb_arch = "riscv64"
+    } else if (current_cpu == "ppc64") {
+      deb_arch = "ppc64el"
     } else {
       assert(false, "Linux installer not configured for this architecture.")
     }
@@ -508,6 +510,8 @@ template("linux_package") {
         rpm_arch = "loongarch64"
       } else if (current_cpu == "riscv64") {
         rpm_arch = "riscv64"
+      } else if (current_cpu == "ppc64") {
+        rpm_arch = "ppc64le"
       } else {
         assert(false, "Linux installer not configured for this architecture.")
       }
diff --git a/v8/gni/snapshot_toolchain.gni b/v8/gni/snapshot_toolchain.gni
index c7faa8ca589..8c3d2dcedab 100644
--- a/v8/gni/snapshot_toolchain.gni
+++ b/v8/gni/snapshot_toolchain.gni
@@ -70,7 +70,7 @@ if (v8_snapshot_toolchain == "") {
     # * targeting win/x64 on a linux/x64 host
     # * targeting win/arm64 on a mac/arm64 host
     v8_snapshot_toolchain = host_toolchain
-  } else if (host_cpu == "arm64" && current_cpu == "x64") {
+  } else if (host_cpu == "arm64" && (current_cpu == "x64" || current_cpu == "ppc64")) {
     # Cross-build from arm64 to intel (likely on an Apple Silicon mac).
     v8_snapshot_toolchain =
         "//build/toolchain/${host_os}:clang_arm64_v8_$v8_current_cpu"
@@ -82,7 +82,7 @@ if (v8_snapshot_toolchain == "") {
     if (v8_current_cpu == "x86") {
       _cpus = v8_current_cpu
     } else if (v8_current_cpu == "arm64" || v8_current_cpu == "mips64el" ||
-               v8_current_cpu == "riscv64" || v8_current_cpu == "loong64") {
+               v8_current_cpu == "riscv64" || v8_current_cpu == "loong64" || v8_current_cpu == "ppc64") {
       if (is_win && v8_current_cpu == "arm64") {
         # set _cpus to blank for Windows ARM64 so host_toolchain could be
         # selected as snapshot toolchain later.
diff --git a/electron/script/strip-binaries.py b/electron/script/strip-binaries.py
index 61fd543862..6981056308 100755
--- a/electron/script/strip-binaries.py
+++ b/electron/script/strip-binaries.py
@@ -33,6 +33,8 @@ def strip_binary(binary_path, target_cpu):
     strip = 'arm-linux-gnueabihf-strip'
   elif target_cpu == 'arm64':
     strip = 'aarch64-linux-gnu-strip'
+  elif target_cpu == 'ppc64':
+    strip = 'powerpc64le-linux-gnu-strip'
   else:
     strip = 'strip'
   
diff --git a/electron/js2c_toolchain.gni b/electron/js2c_toolchain.gni
index b56590857c..ef421da44d 100644
--- a/electron/js2c_toolchain.gni
+++ b/electron/js2c_toolchain.gni
@@ -26,7 +26,7 @@ if (electron_js2c_toolchain == "") {
     # * targeting win/x64 on a linux/x64 host
     # * targeting win/arm64 on a mac/arm64 host
     electron_js2c_toolchain = host_toolchain
-  } else if (host_cpu == "arm64" && current_cpu == "x64") {
+  } else if (host_cpu == "arm64" && (current_cpu == "x64" || current_cpu == "ppc64")) {
     # Cross-build from arm64 to intel (likely on an Apple Silicon mac).
     electron_js2c_toolchain =
         "//build/toolchain/${host_os}:clang_arm64_v8_$current_cpu"
@@ -37,7 +37,7 @@ if (electron_js2c_toolchain == "") {
     assert(current_cpu != "x64", "handled by host_cpu == current_cpu branch")
     if (current_cpu == "x86") {
       _cpus = current_cpu
-    } else if (current_cpu == "arm64") {
+    } else if (current_cpu == "arm64" || current_cpu == "ppc64") {
       if (is_win) {
         # set _cpus to blank for Windows ARM64 so host_toolchain could be
         # selected as snapshot toolchain later.
diff --git a/third_party/libpng/BUILD.gn b/third_party/libpng/BUILD.gn
index 3116ea0e77e8d..145eacd2e2d39 100644
--- a/third_party/libpng/BUILD.gn
+++ b/third_party/libpng/BUILD.gn
@@ -97,6 +97,10 @@ source_set("libpng_sources") {
       "loongarch/filter_lsx_intrinsics.c",
       "loongarch/loongarch_lsx_init.c",
     ]
+  } else if (current_cpu == "ppc64") {
+    cflags += [
+      "-DPNG_POWERPC_VSX_OPT=0",
+    ]
   }
 
   configs -= [ "//build/config/compiler:chromium_code" ]
diff --git a/build/config/linux/pkg-config.py b/build/config/linux/pkg-config.py
index 4f67c16192f76..61f4d7317c53c 100755
--- a/build/config/linux/pkg-config.py
+++ b/build/config/linux/pkg-config.py
@@ -59,7 +59,7 @@ def SetConfigPath(options):
     sys.exit(1)
 
   libdir = sysroot + '/usr/' + options.system_libdir + '/pkgconfig'
-  libdir += ':' + sysroot + '/usr/share/pkgconfig'
+  libdir += '/:' + sysroot + '/usr/share/pkgconfig'
   os.environ['PKG_CONFIG_LIBDIR'] = libdir
   return libdir
 
